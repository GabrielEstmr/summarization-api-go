version: "3.9"
services:
  mongo:
    image: mongo:4.0
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_INITDB_DATABASE=mongodb
      # - MONGO_INITDB_ROOT_USERNAME=admin
      # - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
        - 27017:27017
    networks:
      - broker-kafka

  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "dev_mktplace"
      RABBITMQ_DEFAULT_PASS: "riS9udae"
      RABBITMQ_DEFAULT_VHOST: "dev01_mktplace"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - broker-kafka

  zookeeper1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper1
    hostname: zookeeper1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: "zookeeper1:22888:23888"
    ports:
      - 2181:2181
    networks:
      - broker-kafka

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    hostname: kafka1
    restart: always
    depends_on:
      - zookeeper1
    ports:
      - 9092:9092
    environment:
      # KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092,OUTSIDE://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_LOG_DIRS: /var/lib/kafka/logs
    networks:
      - broker-kafka

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - ELASTIC_PASSWORD=elastic
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    networks:
      - broker-kafka
  
  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic
    ports: ['5601:5601']
    links: ['elasticsearch']
    depends_on: ['elasticsearch']
    networks:
      - broker-kafka
  
  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
    networks:
      - broker-kafka


  # postgres:
  #   container_name: postgres_container
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: admin
  #     PGDATA: /data/postgres
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - broker-kafka
  #   restart: unless-stopped


networks:
  broker-kafka:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 193.168.0.0/16docker